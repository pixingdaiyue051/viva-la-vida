---- html 部分
<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <title>index</title>
        <meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
    </head>
    <body>
        <h1>111111111111111111111111111111</h1>
    </body>
    <script type="text/javascript">
        //避免重复链接
        var lockReconnect = false;
        //路径
        var wsUrl = "ws://127.0.0.1:9481";
        console.log("路径" + wsUrl);
        //webSocket对象
        var ws;
        //时间间隔
        var tt;

        if ("WebSocket" in window) {
            console.log("支持WebSocket")
            ws = new WebSocket(wsUrl);
            //连接关闭函数
            ws.onclose = function () {
                console.log("连接已关闭...");
                clearInterval(tt);
            };
            //连接错误函数
            ws.onerror = function () {
                console.log("连接错误...");
                clearInterval(tt);
            };
            //连接建立,发送信息
            ws.onopen = function () {
                console.log("已连接...");
                var message1 = {
                    "code": "01",
                    "msg": "业务1-订阅包..."
                };

                //webSocket业务订阅——可以有多个业务
                ws.send(JSON.stringify(message1));

                //心跳检测启动
                // heartBeat();
            };
            //业务订阅成功后接受服务端推送消息  ，其实是个字符串
            ws.onmessage = function (evt) {
                console.log('接收到消息' + evt.data);
            };
        } else {
            alert("该浏览器不支持WebSocket")
        }

        //启动心跳检测机制，设置倒计时30秒一次
        function heartBeat(){
            tt = setInterval(function(){
                var message = {
                    "code": "00",
                    "msg":"心跳包 == "+ new Date().getTime() + "..."
                };
                ws.send(JSON.stringify(message));
            }, 30000);
        }
    </script>
</html>


------ nginx 配置
http {

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html/ws;
            index  index.html index.htm;
        }
    }

    server {
        listen       9481;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            proxy_set_header Host $host;
            proxy_set_header  X-Real-IP        $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_connect_timeout 10s;               #配置点1
            proxy_read_timeout 60s;                  #配置点2，如果没效，可以考虑这个时间配置长一点
            proxy_send_timeout 20s;                  #配置点3

            proxy_pass http://127.0.0.1:8342/ok;

        }
            
    }
}